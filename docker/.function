get_container_from_compose_name() {
  foldername=$(basename $(pwd))
  parsed="${foldername//[^A-Za-z0-9 ]/}"
  container=$parsed'_'$1'_1';
  echo $container
}
dlog(){
  container=$(get_container_from_compose_name $1)
  echo $container
  default=100
  docker logs -f --tail ${2:-$default} ${container}
}
dexec(){
  command=$2
  default=bash
  container=$(get_container_from_compose_name $1)
  echo $container
  docker exec -it ${container} ${2:-$default}
}
droodbmode() {
  mode=$1
  container=$(get_container_from_compose_name tomcat)
  docker exec -it $container sed -i "/<!--/!s/<property name=\"hibernate.hbm2ddl.auto.*/<property name=\"hibernate.hbm2ddl.auto\" value=\"$mode\" \/>/g" /usr/local/tomcat/webapps/acas/WEB-INF/classes/META-INF/persistence.xml
  echo "updated roo to run in '$1' mode; run 'docker restart $container' to apply"
}
dpglogmode(){
  container=$(get_container_from_compose_name db)
  docker exec $container sed -i "s/#log_statement = 'none'/log_statement = 'all'/g" /var/lib/postgresql/data/postgresql.conf
  echo "updated db container to log all sql statments; run 'docker restart $container' to apply"
}
dpgsetting(){
  container=$(get_container_from_compose_name db)
  docker exec $container sed -i "s/\(#\)?$1 = .*/$1 = $2/g" /var/lib/postgresql/data/postgresql.conf
}
dpglogs(){
  numberOfLines=$1
  container=$(get_container_from_compose_name db)
  docker exec $container bash -c 'tail -100f $(/bin/ls -1t /var/lib/postgresql/data/pg_log/* | /bin/sed q)'
}
drstudio-install(){
  acasContainer=$(get_container_from_compose_name "acas")
  install_command="echo 'runner' | passwd --stdin runner && \
     wget https://download2.rstudio.org/rstudio-server-rhel-0.99.489-x86_64.rpm --no-verbose && \
     yum install -y --nogpgcheck rstudio-server-rhel-0.99.489-x86_64.rpm && \
     yum install -y git"
  docker exec --user root $acasContainer bash -c "$install_command"
  echo "rstudio server installed; run 'drstudio-start' to start;"
}
drstudio-start(){
  acasContainer=$(get_container_from_compose_name "rservices")
  docker exec --user root $acasContainer /usr/lib/rstudio-server/bin/rserver
  echo "rstudio started;  make sure port 8787 is mapped"
  /usr/bin/open -a "/Applications/Google Chrome.app" "http://$DOCKER_HOST_IP:8787"
}
drstudio-stop(){
  acasContainer=$(get_container_from_compose_name "rservices")
  docker exec --user root $acasContainer killall rserver
}
dinstallracas(){
  acasContainer=$(get_container_from_compose_name "rservices")
  docker exec $acasContainer R CMD INSTALL /home/runner/racas
}
dreloadrapache(){
 acasContainer=$(get_container_from_compose_name "rservices")
 docker exec $acasContainer sh bin/acas.sh reload
}
